{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","id","Math","random","slice","push","updatedList","filter","item","className","type","placeholder","onChange","e","updateInput","target","onClick","addItem","map","deleteItem","size","po","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAgGeA,E,kDA3Ff,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IALQ,E,+CAQlB,SAAYC,EAAKC,GAEfC,KAAKC,SAAL,eACCH,EAAMC,M,qBAIT,WAEE,IAAMH,EAAU,CAChBM,GAAI,EAAIC,KAAKC,SACbL,MAAOC,KAAKL,MAAMC,QAAQS,SAItBR,EAAI,YAAOG,KAAKL,MAAME,MAG5BA,EAAKS,KAAKV,GAGVI,KAAKC,SAAS,CACZJ,OACAD,QAAS,O,wBAKX,SAAWM,GAET,IAGMK,EAHI,YAAOP,KAAKL,MAAME,MAGHW,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDF,KAAKC,SAAS,CAAEJ,KAAMU,M,oBAEvB,WAAU,IAAD,OAER,OACE,qBAAKG,UAAU,MAAf,SACC,gCACC,oBAAIA,UAAU,YAAd,8BAEC,uBAEA,uBAAQA,UAAU,QAClBC,KAAK,OACLC,YAAY,qBACZb,MAAOC,KAAKL,MAAMC,QAClBiB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAY,UAAWD,EAAEE,OAAOjB,UAGpD,wBAAQW,UAAU,SAClBO,QAAS,kBAAM,EAAKC,WADpB,iBAMD,uBACA,qBAAKR,UAAU,QAAf,SAEA,6BACGV,KAAKL,MAAME,KAAKsB,KAAI,SAAAV,GACnB,OACE,qBAAIC,UAAU,QAAd,UACCD,EAAKV,MACN,wBAAQW,UAAU,OAClBO,QAAS,kBAAM,EAAKG,WAAWX,EAAKP,KADpC,SAGG,cAAE,IAAF,CAAoBmB,KAAM,GAAIC,IAAE,QALRb,EAAKP,oB,GA3E1BqB,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.77db282f.chunk.js","sourcesContent":["import { AiFillCloseCircle } from \"react-icons/ai\";\nimport React, { Component } from 'react';\nimport FlipMove from 'react-flip-move';\nclass App extends Component{\n\nconstructor(props){\n  super(props);\n\n  this.state = {\n    newItem: \"\",\n    list: []\n  };\n}\nupdateInput(key, value) {\n  //update react state\n  this.setState({\n  [key]: value\n  });\n}\n\naddItem() {\n  // create new item with unique item\n  const newItem = {\n  id: 1 + Math.random(),\n  value: this.state.newItem.slice()\n};\n\n//copy of current list items\nconst list = [...this.state.list];\n\n//add item to list\nlist.push(newItem);\n\n//update state with new list and rest newItem input\nthis.setState({\n  list,\n  newItem: \"\"\n});\n}\n\n\ndeleteItem(id) {\n  //copy current list item\n  const list = [...this.state.list];\n\n  // filter out items be deleted\n  const updatedList = list.filter(item => item.id !== id);\n\n  this.setState({ list: updatedList });\n}\n render() {\n  \n  return (\n    <div className=\"App\">\n     <div>\n      <h1 className=\"app-title\" > Add an item ...</h1>\n      \n       <br/>\n     \n       <input  className=\"input\"\n       type=\"text\"\n       placeholder=\"type item here ...\"\n       value={this.state.newItem}\n       onChange={e => this.updateInput(\"newItem\", e.target.value)}\n       />\n      \n       <button className=\"AddBtn\"\n       onClick={() => this.addItem()}\n       >\n       Add\n      </button>\n     \n      <br/>\n      <div className=\"listN\">\n      \n      <ul>\n        {this.state.list.map(item => { \n          return (\n            <li className=\"listN\" key={item.id}>\n            {item.value}\n            <button className=\"btn \"\n            onClick={() => this.deleteItem(item.id)}\n             >\n               < AiFillCloseCircle size={19} po />\n              </button  >\n              </li>\n         );\n          })}\n      </ul>\n      </div>\n     </div>\n    </div>\n  );\n }\n \n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}